window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":5,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":7,"startTime":1711258633035,"success":false,"testResults":[{"numFailingTests":2,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1711258633558,"runtime":422,"slow":false,"start":1711258633136},"testFilePath":"E:\\Open Source\\Async website\\website\\scripts\\Tests\\build-dashboard.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mmapGoodFirstIssues function › should handle issues without assignees\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 5\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"area\": \"feature\",\u001b[22m\n    \u001b[2m    \"author\": \"user2\",\u001b[22m\n    \u001b[2m    \"id\": 2,\u001b[22m\n    \u001b[2m    \"isAssigned\": false,\u001b[22m\n    \u001b[32m-   \"labels\": Array [\u001b[39m\n    \u001b[32m-     Object {\u001b[39m\n    \u001b[32m-       \"name\": \"area/feature\",\u001b[39m\n    \u001b[32m-     },\u001b[39m\n    \u001b[32m-   ],\u001b[39m\n    \u001b[31m+   \"labels\": Array [],\u001b[39m\n    \u001b[2m    \"repo\": \"asyncapi/repo2\",\u001b[22m\n    \u001b[2m    \"resourcePath\": \"/issue/2\",\u001b[22m\n    \u001b[2m    \"title\": \"Add new feature\",\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 129 |\u001b[39m         \u001b[90m// Assertion\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 130 |\u001b[39m         expect(mappedIssues)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// One issue should be mapped\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 131 |\u001b[39m         expect(mappedIssues[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoEqual({\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 132 |\u001b[39m             id\u001b[33m:\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 133 |\u001b[39m             title\u001b[33m:\u001b[39m \u001b[32m'Add new feature'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 134 |\u001b[39m             isAssigned\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m \u001b[90m// No assignees\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36mscripts/Tests/build-dashboard.test.js\u001b[39m\u001b[0m\u001b[2m:131:33)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mmapGoodFirstIssues function › should return empty array if no good first issues\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected length: \u001b[32m0\u001b[39m\n    Received length: \u001b[31m1\u001b[39m\n    Received array:  \u001b[31m[{\"area\": \"feature\", \"author\": \"user3\", \"id\": 3, \"isAssigned\": false, \"labels\": [{\"name\": \"enhancement\"}], \"repo\": \"asyncapi/repo3\", \"resourcePath\": \"/issue/3\", \"title\": \"Implement new feature\"}]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 165 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 166 |\u001b[39m         \u001b[90m// Assertion\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 167 |\u001b[39m         expect(mappedIssues)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// No good first issues, so the mapped issues array should be empty\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 169 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveLength (\u001b[22m\u001b[2m\u001b[0m\u001b[36mscripts/Tests/build-dashboard.test.js\u001b[39m\u001b[0m\u001b[2m:167:30)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["getLabel function"],"duration":2,"failureMessages":[],"fullName":"getLabel function should retrieve label from issue","status":"passed","title":"should retrieve label from issue"},{"ancestorTitles":["getLabel function"],"duration":1,"failureMessages":[],"fullName":"getLabel function should return undefined if label not found","status":"passed","title":"should return undefined if label not found"},{"ancestorTitles":["monthsSince function"],"duration":1,"failureMessages":[],"fullName":"monthsSince function should calculate months since a date","status":"passed","title":"should calculate months since a date"},{"ancestorTitles":["monthsSince function"],"duration":1,"failureMessages":[],"fullName":"monthsSince function should return 0 for recent date","status":"passed","title":"should return 0 for recent date"},{"ancestorTitles":["mapGoodFirstIssues function"],"duration":1,"failureMessages":[],"fullName":"mapGoodFirstIssues function should map good first issues","status":"passed","title":"should map good first issues"},{"ancestorTitles":["mapGoodFirstIssues function"],"duration":5,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 5\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"area\": \"feature\",\u001b[22m\n\u001b[2m    \"author\": \"user2\",\u001b[22m\n\u001b[2m    \"id\": 2,\u001b[22m\n\u001b[2m    \"isAssigned\": false,\u001b[22m\n\u001b[32m-   \"labels\": Array [\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"name\": \"area/feature\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-   ],\u001b[39m\n\u001b[31m+   \"labels\": Array [],\u001b[39m\n\u001b[2m    \"repo\": \"asyncapi/repo2\",\u001b[22m\n\u001b[2m    \"resourcePath\": \"/issue/2\",\u001b[22m\n\u001b[2m    \"title\": \"Add new feature\",\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Object.toEqual (E:\\Open Source\\Async website\\website\\scripts\\Tests\\build-dashboard.test.js:131:33)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"mapGoodFirstIssues function should handle issues without assignees","status":"failed","title":"should handle issues without assignees"},{"ancestorTitles":["mapGoodFirstIssues function"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m0\u001b[39m\nReceived length: \u001b[31m1\u001b[39m\nReceived array:  \u001b[31m[{\"area\": \"feature\", \"author\": \"user3\", \"id\": 3, \"isAssigned\": false, \"labels\": [{\"name\": \"enhancement\"}], \"repo\": \"asyncapi/repo3\", \"resourcePath\": \"/issue/3\", \"title\": \"Implement new feature\"}]\u001b[39m\n    at Object.toHaveLength (E:\\Open Source\\Async website\\website\\scripts\\Tests\\build-dashboard.test.js:167:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"mapGoodFirstIssues function should return empty array if no good first issues","status":"failed","title":"should return empty array if no good first issues"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"E:\\Open Source\\Async website\\website\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":11,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["E:\\Open Source\\Async website\\website\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./html-report","filename":"coverage.html","expand":true}]],"rootDir":"E:\\Open Source\\Async website\\website","runTestsByPath":false,"seed":1875944650,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"E:\\Open Source\\Async website\\website\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1711258633571,"_reporterOptions":{"publicPath":"./html-report","filename":"coverage.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})